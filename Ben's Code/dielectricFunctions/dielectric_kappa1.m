function gamma = dielectric_kappa1(k, theta1, theta2, mu1, mu2, beta, init_guess)

% Kappa = 1 throughout

%F = @(omega) 1+(sqrt(-1)*16).*2.^(1/2).*beta.*((1/4).*(2.^(1/2).*omega+(-1).*k.*(2.^( ...
%  1/2).*mu1+(sqrt(-1)*3).*theta1)).*((sqrt(-1)*(-2)).*k.*mu1+(sqrt(-1)*2) ...
%  .*omega+2.^(1/2).*k.*theta1).^(-3)+(-2).*k.^3.*(k.*mu1+(-1).*omega).* ...
%  theta1.^3.*((-4).*k.*mu1.*omega+2.*omega.^2+k.^2.*(2.*mu1.^2+theta1.^2)) ...
%  .^(-3))+(sqrt(-1)*(-16)).*2.^(1/2).*(1+(-1).*beta).*((1/4).*((sqrt(-1)*( ...
%  -1)).*2.^(1/2).*(k.*mu2+(-1).*omega)+3.*k.*theta2).*(2.*k.*mu2+(-2).* ...
%  omega+sqrt(-1).*2.^(1/2).*k.*theta2).^(-3)+(-2).*k.^3.*((-1).*k.*mu2+ ...
%  omega).*theta2.^3.*(2.*((-1).*k.*mu2+omega).^2+k.^2.*theta2.^2).^(-3));

F = @(omega) 1+(-2).*beta.*(2.*((-1).*k.*mu1+omega).^2+k.^2.*theta1.^2).^(-3).*(4.*(( ...
  -1).*k.*mu1+omega).^4+12.*k.^2.*((-1).*k.*mu1+omega).^2.*theta1.^2+(-3) ...
  .*k.^4.*theta1.^4+(sqrt(-1)*8).*2.^(1/2).*k.^4.*mu1.*(theta1.^2).^(3/2)+ ...
  (sqrt(-1)*(-8)).*2.^(1/2).*k.^3.*omega.*(theta1.^2).^(3/2))+(-2).*((-1)+ ...
  beta).*(2.*((-1).*k.*mu2+omega).^2+k.^2.*theta2.^2).^(-3).*((-4).*((-1) ...
  .*k.*mu2+omega).^4+(-12).*k.^2.*((-1).*k.*mu2+omega).^2.*theta2.^2+3.* ...
  k.^4.*theta2.^4+(sqrt(-1)*(-8)).*2.^(1/2).*k.^4.*mu2.*(theta2.^2).^(3/2) ...
  +(sqrt(-1)*8).*2.^(1/2).*k.^3.*omega.*(theta2.^2).^(3/2));

options = optimoptions('fsolve','Display','off');
omega = fsolve(F, init_guess, options);
gamma = imag(omega); %imaginary component of angular frequency for GSA

end
