function gamma = dielectric_kappa(k, theta1, theta2, mu1, mu2, beta, kappa, init_guess)
%%%%%%%%%%%%%%%%%%%%%%%% UPDATED TO PROJECTED 1D %%%%%%%%%%%%%%%%%%%%%%%%%%

if(kappa == 1)

    F = @(omega) 1+(-1).*beta.*((-1).*k.*mu1+omega+sqrt(-1).*k.*theta1).^(-2)+(-1).*(1+( ...
        -1).*beta).*((-1).*k.*mu2+omega+sqrt(-1).*k.*theta2).^(-2);

    options = optimoptions('fsolve','Display','off');
    omega = fsolve(F, init_guess, options);
    gamma = imag(omega); %imaginary component of angular frequency for GSA

elseif(kappa == 2)

    F = @(omega) 1+(sqrt(-1)*32).*2.^(1/2).*beta.*k.^(-1).*theta1.^3.*((-1/64).*k.* ...
          theta1.^(-3).*(2.^(1/2).*k.*mu1+(-1).*2.^(1/2).*omega+(sqrt(-1)*6).*k.* ...
          theta1).*((sqrt(-1)*(-1)).*k.*mu1+sqrt(-1).*omega+2.^(1/2).*k.*theta1) ...
          .^(-3)+k.^4.*((-1).*k.*mu1+omega).*((-2).*k.*mu1.*omega+omega.^2+k.^2.*( ...
          mu1.^2+2.*theta1.^2)).^(-3))+(sqrt(-1)*32).*2.^(1/2).*(1+(-1).*beta).* ...
          k.^(-1).*theta2.^3.*((-1/64).*k.*theta2.^(-3).*(2.^(1/2).*k.*mu2+(-1).* ...
          2.^(1/2).*omega+(sqrt(-1)*6).*k.*theta2).*((sqrt(-1)*(-1)).*k.*mu2+sqrt( ...
          -1).*omega+2.^(1/2).*k.*theta2).^(-3)+k.^4.*((-1).*k.*mu2+omega).*((-2) ...
          .*k.*mu2.*omega+omega.^2+k.^2.*(mu2.^2+2.*theta2.^2)).^(-3));

    options = optimoptions('fsolve','Display','off');
    omega = fsolve(F, init_guess, options);
    gamma = imag(omega); %imaginary component of angular frequency for GSA

elseif(kappa == 6)

    F = @(omega) 1+(sqrt(-1)*(-5308416/7)).*6.^(1/2).*beta.*k.^(-1).*theta1.^11.*(k.^12.* ...
          (k.*mu1+(-1).*omega).*((-2).*k.*mu1.*omega+omega.^2+k.^2.*(mu1.^2+6.* ...
          theta1.^2)).^(-7)+(1/31850496).*k.*theta1.^(-11).*((sqrt(-1)*(-1)).*k.* ...
          mu1+sqrt(-1).*omega+6.^(1/2).*k.*theta1).^(-7).*((-7).*6.^(1/2).* ...
          omega.^5+7.*k.*omega.^4.*(5.*6.^(1/2).*mu1+(sqrt(-1)*42).*theta1)+(-14) ...
          .*k.^2.*omega.^3.*(5.*6.^(1/2).*mu1.^2+(sqrt(-1)*84).*mu1.*theta1+(-62) ...
          .*6.^(1/2).*theta1.^2)+14.*k.^3.*omega.^2.*(5.*6.^(1/2).*mu1.^3+(sqrt( ...
          -1)*126).*mu1.^2.*theta1+(-186).*6.^(1/2).*mu1.*theta1.^2+(sqrt(-1)*( ...
          -588)).*theta1.^3)+k.^4.*omega.*((-35).*6.^(1/2).*mu1.^4+(sqrt(-1)*( ...
          -1176)).*mu1.^3.*theta1+2604.*6.^(1/2).*mu1.^2.*theta1.^2+(sqrt(-1)* ...
          16464).*mu1.*theta1.^3+(-7116).*6.^(1/2).*theta1.^4)+k.^5.*(7.*6.^(1/2) ...
          .*mu1.^5+(sqrt(-1)*294).*mu1.^4.*theta1+(-868).*6.^(1/2).*mu1.^3.* ...
          theta1.^2+(sqrt(-1)*(-8232)).*mu1.^2.*theta1.^3+7116.*6.^(1/2).*mu1.* ...
          theta1.^4+(sqrt(-1)*16632).*theta1.^5)))+(sqrt(-1)*(-5308416/7)).*6.^( ...
          1/2).*(1+(-1).*beta).*k.^(-1).*theta2.^11.*(k.^12.*(k.*mu2+(-1).*omega) ...
          .*((-2).*k.*mu2.*omega+omega.^2+k.^2.*(mu2.^2+6.*theta2.^2)).^(-7)+( ...
          1/31850496).*k.*theta2.^(-11).*((sqrt(-1)*(-1)).*k.*mu2+sqrt(-1).*omega+ ...
          6.^(1/2).*k.*theta2).^(-7).*((-7).*6.^(1/2).*omega.^5+7.*k.*omega.^4.*( ...
          5.*6.^(1/2).*mu2+(sqrt(-1)*42).*theta2)+(-14).*k.^2.*omega.^3.*(5.*6.^( ...
          1/2).*mu2.^2+(sqrt(-1)*84).*mu2.*theta2+(-62).*6.^(1/2).*theta2.^2)+14.* ...
          k.^3.*omega.^2.*(5.*6.^(1/2).*mu2.^3+(sqrt(-1)*126).*mu2.^2.*theta2+( ...
          -186).*6.^(1/2).*mu2.*theta2.^2+(sqrt(-1)*(-588)).*theta2.^3)+k.^4.* ...
          omega.*((-35).*6.^(1/2).*mu2.^4+(sqrt(-1)*(-1176)).*mu2.^3.*theta2+ ...
          2604.*6.^(1/2).*mu2.^2.*theta2.^2+(sqrt(-1)*16464).*mu2.*theta2.^3+( ...
          -7116).*6.^(1/2).*theta2.^4)+k.^5.*(7.*6.^(1/2).*mu2.^5+(sqrt(-1)*294).* ...
          mu2.^4.*theta2+(-868).*6.^(1/2).*mu2.^3.*theta2.^2+(sqrt(-1)*(-8232)).* ...
          mu2.^2.*theta2.^3+7116.*6.^(1/2).*mu2.*theta2.^4+(sqrt(-1)*16632).* ...
          theta2.^5)));


    options = optimoptions('fsolve','Display','off');
    omega = fsolve(F, init_guess, options);
    gamma = imag(omega); %imaginary component of angular frequency for GSA

else
    disp('Error: kappa is not equal to 1, 2, or 6');
    gamma = 0;

end